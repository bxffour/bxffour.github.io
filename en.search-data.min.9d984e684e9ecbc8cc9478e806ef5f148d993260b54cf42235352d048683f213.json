[{"id":0,"href":"/docs/reading_lists/blogs/","title":"Blogs","section":"Library","content":" Blogs # A catalogue of blogs I have read or looking to read, with links to their sources. Some may include write-ups.\nLegend # ⏳ Currently reading ✅ Finished reading Reading List # Programming # Let\u0026rsquo;s talk about this async Golang # The Go Memory Model Leveraging benchstat Projections in Go Benchmark Analysis! Debug Go Request Latency with Datadog\u0026rsquo;s Profiling Timeline Scaling Go to 192 Cores with Heavy I/O Rust # Rust: Pointers Getting Started with Tracing in Rust Writing a container in rust System Design # Designing Stripe for Black Friday: How to achieve 99.9999% uptime Distributed Computing # Why does Neon use Paxos instead of Raft, and what’s the difference? Programming Parallel Computers Testing Distributed Systems for Linearizability Transparent Logs for Skeptical Clients How to build type-safe State Machines using type-state How the Bitcoin protocol actually works An overview of Cloudflare\u0026rsquo;s logging pipeline Building a Large-scale Distributed Storage System Based on Raft The Perils of Good Abstractions Chaotic Perspectives SOA and Newton\u0026rsquo;s Universe Databases and Storage # Database Internals: Working with IO Data Corruption Bug in OpenZFS How Stripe’s document databases supported 99.999% uptime with zero-downtime data migrations io_uring basics: Writing a file to disk Creating a custom filesytem using FUSE - Part 1 A write-ahead log is not a universal part of durability What Modern NVMe Storage Can Do, And How To Exploit It: High-Performance I/O for High-Performance Storage Engines How does continuous backup and point-in-time recovery work in databases Quick Overview of PostgreSQL’s Table Access Method Caching beyond RAM: the case for NVMe - Dormando Introducing DoorDash’s in-house search engine What I Talk About When I Talk About Query Optimizer (Part 1): IR Design Devops | SRE | Platform Engineering | Infrastructure # Building a Control Plane for Lyft’s Shared Development Environment Moving Baselime from AWS to Cloudflare: simpler architecture, improved performance, over 80% lower cloud costs Working together to detect maliciously or mistakenly issued certificates. How CT fits into the wider Web PKI ecosystem Improving platform resilience at Cloudflare through automation Kubernetes Security Guide (Kubernetes Hardening) Operating Systems # How to step into a SYSCALL with a debugger using kernel binary patch. Writing a system call tracer using eBPF A look inside the BPF verifier Research # SIEVE: an Efficient Turn-Key Eviction Algorithm for Web Caches Misc # Startups on hard mode: Oxide. Part 1: Hardware "},{"id":1,"href":"/docs/reading_lists/books/","title":"Books","section":"Library","content":" Books # A catalogue of books I have read or looking to read, with links to their sources. Some may include write-ups.\nLegend # ⏳ Currently reading ✅ Finished reading Reading List # Designing Data Intensive Applications - Martin Kleppmann ⏳ Systems Performance - Brendan Gregg PostgreSQL 14 Internals "},{"id":2,"href":"/docs/reading_lists/courses/","title":"Courses","section":"Library","content":" Course List # What every SRE should know about GNU/Linux resolvers and Dual-Stack applications SRE deep dive into Linux Page Cache "},{"id":3,"href":"/docs/reading_lists/","title":"Library","section":"Docs","content":" Reads # This section is where I document and keep track of the resources I explore, occasionally including brief write-ups with my thoughts and reflections on them.\nCategories # Blogs Books Papers "},{"id":4,"href":"/docs/reading_lists/papers/","title":"Papers","section":"Library","content":" Papers # A catalogue of papers I have read or looking to read, with links to their sources. Some may include write-ups.\nLegend # ⏳ Currently Reading ✅ Finished Reading Reading List # Concurrency and Memory # Why Events Are A Bad Idea (for high-concurrency servers) What every systems programmer should know about concurrency What Every Programmer Should Know About Memory Databases \u0026amp; Storage # What If: Causal Analysis with Graph Databases An Overview of Query Optimization in Relational Systems Exploiting Cloud Object Storage for High-Performance Analytics SQLite: Past, Present, and Future OLTP Through the Looking Glass, and What We Found There ROSE: Robust Caches for Amazon Product Search MIT 6.824 (Distributed Systems Spring 2024) # MapReduce: Simplified Data Processing on Large Clusters The Google File System In Search of an Understandable Consensus Algorithm (Extended Version) ZooKeeper: Wait-free coordination for Internet-scale systems Grove: a Separation-Logic Library for Verifying Distributed Systems Spanner: Google’s Globally-Distributed Database ⏳ Chardonnay: Fast and General Datacenter Transactions for On-Disk Databases No compromises: distributed transactions with consistency, availability, and performance Amazon DynamoDB: A Scalable, Predictably Performant, and Fully Managed NoSQL Database Service Ownership: A Distributed Futures System for Fine-Grained Tasks Scaling Memcache at Facebook On-demand Container Loading in AWS Lambda Boki: Stateful Serverless Computing with Shared Logs Secure Untrusted Data Repository (SUNDR) Practical Byzantine Fault Tolerance Bitcoin: A Peer-to-Peer Electronic Cash System MIT 6.824 (Distributed Systems Spring 2020) # The Design for a Practical System For Fault Tolerant Virtual Machines Object Storage on CRAQ High-throughput chain replication for read-mostly workloads Amazon Aurora: Design Considerations for High Throughput Cloud-Native Relational Databases Frangipani: A Scalable Distributed File System Resilient Distributed Datasets: A Fault-Tolerant Abstraction for In-Memory Cluster Computing Don’t Settle for Eventual: Scalable Causal Consistency for Wide-Area Storage with COPS Blockstack: A New Internet for Decentralized Applications Experiences with a Distributed, Scalable, Methodological File System: AnalogicFS Distributed Systems # Fast Paxos ARC: Analysis of Raft Consensus The Part-Time Parliament Paxos Made Simple Paxos Made Live - An Engineering Perspective How to Build a Highly Available System Using Consensus Distributed Computing Economics Rules of Thumb in Data Engineering Fallacies of Distributed Computing Impossibility of Distributed Consensus with One Faulty Process Unreliable Failure Detectors for Reliable Distributed Systems Lamport Clocks The Byzantine Generals Problem Lazy Replication: Exploiting the Semantics of Distributed Services Scalable Agreement - Towards Ordering as a Service Scalable Eventually Consistent Counters over Unreliable Networks Systems Research # Are Unikernels Ready for Serverless on the Edge? Shenango: Achieving High CPU Efficiency for Latency-sensitive Datacenter Workloads System Design # Zanzibar: Google’s Consistent, Global Authorization System On Designing and Deploying Internet-Scale Services Data on the Outside versus Data on the Inside Programming Language Design # A Unified Theory of Garbage Collection Scratch # Building on Quicksand Google # MapReduce Chubby Lock Manager Google File System BigTable Data Management for Internet-Scale Single-Sign-On Dremel: Interactive Analysis of Web-Scale Datasets Large-scale Incremental Processing Using Distributed Transactions and Notifications Megastore: Providing Scalable, Highly Available Storage for Interactive Services Photon Mesa: Geo-Replicated, Near Real-Time, Scalable Data Warehousing "}]