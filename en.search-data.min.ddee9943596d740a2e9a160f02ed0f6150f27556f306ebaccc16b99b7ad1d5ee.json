[{"id":0,"href":"/docs/reading_lists/blogs/","title":"Blogs","section":"Reads","content":" Blogs # A catalogue of blogs I have read or looking to read, with links to their sources. Some may include write-ups.\nLegend # ⏳ Currently reading ✅ Finished reading Reading List # The Go Memory Model Working together to detect maliciously or mistakenly issued certificates. How CT fits into the wider Web PKI ecosystem Transparent Logs for Skeptical Clients How the Bitcoin protocol actually works Testing Distributed Systems for Linearizability "},{"id":1,"href":"/docs/reading_lists/books/","title":"Books","section":"Reads","content":" Books # A catalogue of books I have read or looking to read, with links to their sources. Some may include write-ups.\nLegend # ⏳ Currently reading ✅ Finished reading Reading List # Designing Data Intensive Applications - Martin Kleppmann ⏳ Systems Performance - Brendan Gregg "},{"id":2,"href":"/docs/reading_lists/papers/","title":"Papers","section":"Reads","content":" Papers # A catalogue of papers I have read or looking to read, with links to their sources. Some may include write-ups.\nLegend # ⏳ Currently Reading ✅ Finished Reading Reading List # Concurrency and Memory # Why Events Are A Bad Idea (for high-concurrency servers) What every systems programmer should know about concurrency What Every Programmer Should Know About Memory Databases # What If: Causal Analysis with Graph Databases MIT 6.824 (Distributed Systems Spring 2024) # MapReduce: Simplified Data Processing on Large Clusters The Google File System In Search of an Understandable Consensus Algorithm (Extended Version) ZooKeeper: Wait-free coordination for Internet-scale systems Grove: a Separation-Logic Library for Verifying Distributed Systems Spanner: Google’s Globally-Distributed Database Chardonnay: Fast and General Datacenter Transactions for On-Disk Databases No compromises: distributed transactions with consistency, availability, and performance Amazon DynamoDB: A Scalable, Predictably Performant, and Fully Managed NoSQL Database Service Ownership: A Distributed Futures System for Fine-Grained Tasks Scaling Memcache at Facebook On-demand Container Loading in AWS Lambda Boki: Stateful Serverless Computing with Shared Logs Secure Untrusted Data Repository (SUNDR) Practical Byzantine Fault Tolerance Bitcoin: A Peer-to-Peer Electronic Cash System MIT 6.824 (Distributed Systems Spring 2020) # The Design for a Practical System For Fault Tolerant Virtual Machines Object Storage on CRAQ High-throughput chain replication for read-mostly workloads Amazon Aurora: Design Considerations for High Throughput Cloud-Native Relational Databases Frangipani: A Scalable Distributed File System Resilient Distributed Datasets: A Fault-Tolerant Abstraction for In-Memory Cluster Computing Don’t Settle for Eventual: Scalable Causal Consistency for Wide-Area Storage with COPS Blockstack: A New Internet for Decentralized Applications Experiences with a Distributed, Scalable, Methodological File System: AnalogicFS "},{"id":3,"href":"/docs/reading_lists/","title":"Reads","section":"Docs","content":" Reads # This section catalogs the blogs, papers, and books I’ve read. It is organized into categories and may include short write-ups or reflections for some entries.\nCategories # Blogs: Short, practical insights. Papers: Technical concepts and research. Books: Comprehensive explorations of technology and systems engineering. "}]